name: GitHub CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  # DEPLOY NUGETS
  build_nugets:
    runs-on: ubuntu-latest
    env:
      ROOT: ./src
      NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}} 
    steps:
    - uses: actions/checkout@v2

    - name: ðŸ“‚ Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.100
        source-url: https://nuget.pkg.github.com/${{github.repository_owner}}/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.PACKAGES_WRITE_TOKEN}} 

    - name: ðŸ“‚ Files
      working-directory: ${{env.ROOT}}
      run: ls -R

    - name: ðŸš€ Pack LanguageIdentification.CLD3.Native
      working-directory: ${{env.ROOT}}/..
      run: |
          cd ./${{env.ROOT}}/LanguageIdentification.CLD3.Native
          sudo bash -c ./Scripts/setup-build.sh
          sudo bash -c ./Scripts/run-build.sh
          dotnet pack -c Release -o out 

    - name: ðŸš€ Pack LanguageIdentification.CLD3.Native
      working-directory: ${{env.ROOT}}/LanguageIdentification.CLD3.Native
      run: dotnet pack -c Release -o out 

    - name: ðŸš€ Pack LanguageIdentification.CLD3
      working-directory: ${{env.ROOT}}/LanguageIdentification.CLD3
      run: dotnet pack -c Release -o out

    - uses: actions/upload-artifact@v2
      if: github.ref == 'refs/heads/master'
      with:
        name: build_nugets
        path: ${{env.ROOT}}/**/out
        retention-days: 1

  deploy_nugets:
    runs-on: ubuntu-latest
    needs: build_nugets
    if: github.ref == 'refs/heads/master'
    env:
      ROOT: ./src
      NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}} 
    steps:
    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: build_nugets
        path: ${{env.ROOT}}

    - name: ðŸ“‚ Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.100
        source-url: https://nuget.pkg.github.com/${{github.repository_owner}}/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.PACKAGES_WRITE_TOKEN}} 

    - name: ðŸ“‚ Files
      working-directory: ${{env.ROOT}}
      run: ls -R

    - name: ðŸšš Push LanguageIdentification.CLD3.Native to GitHub registry
      working-directory: ${{env.ROOT}}/LanguageIdentification.CLD3.Native
      run: dotnet nuget push ./out/*.nupkg --skip-duplicate -k ${{env.NUGET_AUTH_TOKEN}}

    - name: ðŸšš Push LanguageIdentification.CLD3 to GitHub registry
      working-directory: ${{env.ROOT}}/LanguageIdentification.CLD3
      run: dotnet nuget push ./out/*.nupkg --skip-duplicate -k ${{env.NUGET_AUTH_TOKEN}}

    - uses: geekyeggo/delete-artifact@v1
      with:
        name: build_nugets
